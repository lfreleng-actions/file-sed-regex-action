---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# file-sed-regex-action
name: 'String Substitution in File (using sed)'
description: 'Performs string substitutions using the command-line tool, sed'

inputs:
  # Mandatory
  flags:
    description: 'Flags to use with SED command'
    required: false
    default: '-i'
  regex:
    description: 'Search/replace expression'
    required: true
  path:
    description: 'Path to local file to modify'
    required: true
  # Optional
  debug:
    description: 'Enable debugging output'
    required: false

outputs:
  exit_status:
    description: 'Exit status of sed command'
    value: ${{ steps.sed.outputs.exit_status }}

runs:
  using: 'composite'
  steps:
    - name: 'Performing string substitution'
      id: sed
      shell: bash
      run: |
        # Performing string substitution

        sed_cmd=$(which sed)
        if [ ! -x "$sed_cmd" ]; then
          echo 'Error: sed command not in PATH ❌'; exit 1
        elif ! ($sed_cmd sed --version 2>&1 | grep -q GNU); then
          echo 'Error: this action only works with GNU sed ❌'; exit 1
        fi

        file_path="${{ inputs.path }}"
        if [ -z "$file_path" ]; then
          echo 'Error: input variable/path cannot be empty ❌'; exit 1
        elif [ ! -f "$file_path" ]; then
          echo 'Error: file not found ❌'
          echo "Path: $file_path"; exit 1
        fi

        set -o noglob
        if [ "f${{ inputs.debug }}" = 'ftrue' ]; then
          echo "$sed_cmd ${{ inputs.flags }} '${{ inputs.regex }}' $file_path"
        fi
        "$sed_cmd" ${{ inputs.flags }} '${{ inputs.regex }}' "$file_path"
        exit_status="$?"
        echo "exit_status=$exit_status" >> "$GITHUB_OUTPUT"
        if [ "$exit_status" != '0' ]; then
          echo -n "Error: sed command failed with exit status $exit_status ❌"
          exit $exit_status
        else
          echo 'exit_status=0' >> "$GITHUB_OUTPUT"
          echo 'Successful sed command/operation ✅'
        fi
